@model WebApp.Entities.ViewModels.JobApplication.JobApplicationTableViewModel;

<div class="table-responsive">
    <table class="table">
        <thead>
            <tr>
                <th scope="col">Title</th>
                <th scope="col">Company</th>
                <th scope="col">Description</th>
                <th scope="col">Location</th>
                <th scope="col">User</th>
                <th scope="col">Application Status</th>
                <th scope="col">Action</th>
            </tr>
        </thead>
        <tbody>
            @{
                foreach (var jobApplication in Model.JobApplications)
                {
                    <tr>
                        <td>@jobApplication.Job.Title</td>
                        <td>@jobApplication.Job.CompanyName</td>
                        <td>@jobApplication.Job.Description</td>
                        <td>@jobApplication.Job.Location</td>
                        <td>@jobApplication.User.Username</td>
                        <td>@jobApplication.Status</td>
                        <td>
                            <button type="button" class="btn btn-primary" data-bs-toggle="modal"
                                data-bs-target="#jobApplicationStatus" onclick="changeJobApplicationView(@jobApplication.Id)">
                                Change application Status
                            </button>
                            <a href="~/uploads/@jobApplication.Resume">
                                <button type="button" class="btn btn-info">
                                    View Resume
                                </button>
                            </a>
                            <button type="button" class="btn btn-danger" data-bs-toggle="modal"
                                data-bs-target="#deletejobApplicationModal" onclick="deleteJobApplicationView(@jobApplication.Id)">
                                Delete application 
                            </button>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

<!-- footer -->
<div class="d-flex justify-content-end align-items-center gap-2 flex-wrap">
    <input type="text" value="@Model.CurrentPage" hidden id="orderCurrentPage" class="d-none">
    <div class="d-flex align-items-center">
        <div>Items per page</div>
        <div class="ps-1">
            <select name="pageSize" id="orderPageSize" onchange="updatePageSize()" value="@Model.PageSize">
                <option value="5">5</option>
                <option value="10">10</option>
                <option value="15">15</option>
            </select>
        </div>
    </div>
    <div class="d-flex align-items-center">
        <div class="ps-1">
            Showing @((Model.CurrentPage - 1) * Model.PageSize + 1) -
            @(((Model.CurrentPage - 1) * Model.PageSize + Model.JobApplications.Count) > Model.TotalItems ?
                        Model.TotalItems :
                        (Model.CurrentPage - 1) * Model.PageSize + Model.JobApplications.Count)
            of @Model.TotalItems
        </div>
        <div class="ps-1 d-flex">
            <!-- Previous Page Button -->
            <button class="tableViewButton d-flex justify-content-center align-items-center cursor-pointer"
                @(Model.CurrentPage == 1 || Model.JobApplications.Count == 0 ? "disabled" : "")
                onclick="navigatePage(@Model.CurrentPage - 1)">
                &lt;
            </button>

            <!-- Next Page Button -->
            <div class="ps-2">
                <button class="tableViewButton d-flex justify-content-center align-items-center cursor-pointer"
                    @(Model.CurrentPage == Model.TotalPages || Model.JobApplications.Count == 0 ? "disabled" : "")
                    onclick="navigatePage(@Model.CurrentPage + 1)">
                    &gt;
                </button>
            </div>
        </div>
    </div>
</div>