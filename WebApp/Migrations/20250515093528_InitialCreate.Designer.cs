// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebApp.Entities.Data;

#nullable disable

namespace WebApp.Migrations
{
    [DbContext(typeof(TestFinalContext))]
    [Migration("20250515093528_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebApp.Entities.Models.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("company_name");

                    b.Property<int?>("Createdby")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("createdby")
                        .HasDefaultValueSql("1");

                    b.Property<DateTime>("Createdtime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("createdtime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("description");

                    b.Property<bool>("Isdeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("isdeleted");

                    b.Property<DateTime>("Lastmodifiedtime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("lastmodifiedtime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Location")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("location");

                    b.Property<int?>("Modifiedby")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("modifiedby")
                        .HasDefaultValueSql("1");

                    b.Property<int>("NoOfApplicant")
                        .HasColumnType("integer")
                        .HasColumnName("no_of_applicant");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("job_pkey");

                    b.HasIndex("Createdby");

                    b.HasIndex("Modifiedby");

                    b.ToTable("job", (string)null);
                });

            modelBuilder.Entity("WebApp.Entities.Models.Jobapplication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Createdby")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("createdby")
                        .HasDefaultValueSql("1");

                    b.Property<DateTime>("Createdtime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("createdtime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("Isdeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("isdeleted");

                    b.Property<int>("JobId")
                        .HasColumnType("integer")
                        .HasColumnName("job_id");

                    b.Property<DateTime>("Lastmodifiedtime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("lastmodifiedtime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("Modifiedby")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("modifiedby")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Resume")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("resume");

                    b.Property<string>("Status")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("status");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("jobapplication_pkey");

                    b.HasIndex("Createdby");

                    b.HasIndex("JobId");

                    b.HasIndex("Modifiedby");

                    b.HasIndex("UserId");

                    b.ToTable("jobapplication", (string)null);
                });

            modelBuilder.Entity("WebApp.Entities.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Role1")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("role");

                    b.HasKey("Id")
                        .HasName("role_pkey");

                    b.HasIndex(new[] { "Role1" }, "role_role_key")
                        .IsUnique();

                    b.ToTable("role", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Role1 = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Role1 = "User"
                        });
                });

            modelBuilder.Entity("WebApp.Entities.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Createdby")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("createdby")
                        .HasDefaultValueSql("1");

                    b.Property<DateTime>("Createdtime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("createdtime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("Isdeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("isdeleted");

                    b.Property<bool?>("Isfirsttime")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasColumnName("isfirsttime")
                        .HasDefaultValueSql("true");

                    b.Property<DateTime>("Lastmodifiedtime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("lastmodifiedtime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("Modifiedby")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("modifiedby")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer")
                        .HasColumnName("role_id");

                    b.Property<bool?>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasColumnName("status")
                        .HasDefaultValueSql("true");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("user_pkey");

                    b.HasIndex("Createdby");

                    b.HasIndex("Modifiedby");

                    b.HasIndex("RoleId");

                    b.ToTable("user", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Createdby = 1,
                            Createdtime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Isdeleted = false,
                            Lastmodifiedtime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Modifiedby = 1,
                            Password = "GYTHWp4fhH6h5hv/WFDkR9zOqaNkQq4I2paR3u9yflY=",
                            RoleId = 1,
                            Username = "dhruvsavsani1"
                        },
                        new
                        {
                            Id = 2,
                            Createdby = 1,
                            Createdtime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Isdeleted = false,
                            Lastmodifiedtime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Modifiedby = 1,
                            Password = "GYTHWp4fhH6h5hv/WFDkR9zOqaNkQq4I2paR3u9yflY=",
                            RoleId = 2,
                            Username = "dhruvsavsani2"
                        },
                        new
                        {
                            Id = 3,
                            Createdby = 1,
                            Createdtime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Isdeleted = false,
                            Lastmodifiedtime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Modifiedby = 1,
                            Password = "GYTHWp4fhH6h5hv/WFDkR9zOqaNkQq4I2paR3u9yflY=",
                            RoleId = 2,
                            Username = "dhruvsavsani3"
                        },
                        new
                        {
                            Id = 4,
                            Createdby = 1,
                            Createdtime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Isdeleted = false,
                            Lastmodifiedtime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Modifiedby = 1,
                            Password = "GYTHWp4fhH6h5hv/WFDkR9zOqaNkQq4I2paR3u9yflY=",
                            RoleId = 2,
                            Username = "dhruvsavsani4"
                        },
                        new
                        {
                            Id = 5,
                            Createdby = 1,
                            Createdtime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Isdeleted = false,
                            Lastmodifiedtime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Modifiedby = 1,
                            Password = "GYTHWp4fhH6h5hv/WFDkR9zOqaNkQq4I2paR3u9yflY=",
                            RoleId = 2,
                            Username = "dhruvsavsani5"
                        },
                        new
                        {
                            Id = 6,
                            Createdby = 1,
                            Createdtime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Isdeleted = false,
                            Lastmodifiedtime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Modifiedby = 1,
                            Password = "GYTHWp4fhH6h5hv/WFDkR9zOqaNkQq4I2paR3u9yflY=",
                            RoleId = 2,
                            Username = "dhruvsavsani6"
                        },
                        new
                        {
                            Id = 7,
                            Createdby = 1,
                            Createdtime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Isdeleted = false,
                            Lastmodifiedtime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Modifiedby = 1,
                            Password = "GYTHWp4fhH6h5hv/WFDkR9zOqaNkQq4I2paR3u9yflY=",
                            RoleId = 2,
                            Username = "dhruvsavsani7"
                        },
                        new
                        {
                            Id = 8,
                            Createdby = 1,
                            Createdtime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Isdeleted = false,
                            Lastmodifiedtime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Modifiedby = 1,
                            Password = "GYTHWp4fhH6h5hv/WFDkR9zOqaNkQq4I2paR3u9yflY=",
                            RoleId = 2,
                            Username = "dhruvsavsani8"
                        },
                        new
                        {
                            Id = 9,
                            Createdby = 1,
                            Createdtime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Isdeleted = false,
                            Lastmodifiedtime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Modifiedby = 1,
                            Password = "GYTHWp4fhH6h5hv/WFDkR9zOqaNkQq4I2paR3u9yflY=",
                            RoleId = 2,
                            Username = "dhruvsavsani9"
                        },
                        new
                        {
                            Id = 10,
                            Createdby = 1,
                            Createdtime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Isdeleted = false,
                            Lastmodifiedtime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Modifiedby = 1,
                            Password = "GYTHWp4fhH6h5hv/WFDkR9zOqaNkQq4I2paR3u9yflY=",
                            RoleId = 2,
                            Username = "dhruvsavsani10"
                        },
                        new
                        {
                            Id = 11,
                            Createdby = 1,
                            Createdtime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Isdeleted = false,
                            Lastmodifiedtime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Modifiedby = 1,
                            Password = "GYTHWp4fhH6h5hv/WFDkR9zOqaNkQq4I2paR3u9yflY=",
                            RoleId = 2,
                            Username = "dhruvsavsani11"
                        },
                        new
                        {
                            Id = 12,
                            Createdby = 1,
                            Createdtime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Isdeleted = false,
                            Lastmodifiedtime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Modifiedby = 1,
                            Password = "GYTHWp4fhH6h5hv/WFDkR9zOqaNkQq4I2paR3u9yflY=",
                            RoleId = 2,
                            Username = "dhruvsavsani12"
                        });
                });

            modelBuilder.Entity("WebApp.Entities.Models.Job", b =>
                {
                    b.HasOne("WebApp.Entities.Models.User", "CreatedbyNavigation")
                        .WithMany("JobCreatedbyNavigations")
                        .HasForeignKey("Createdby")
                        .HasConstraintName("fk_createdby");

                    b.HasOne("WebApp.Entities.Models.User", "ModifiedbyNavigation")
                        .WithMany("JobModifiedbyNavigations")
                        .HasForeignKey("Modifiedby")
                        .HasConstraintName("fk_modifiedby");

                    b.Navigation("CreatedbyNavigation");

                    b.Navigation("ModifiedbyNavigation");
                });

            modelBuilder.Entity("WebApp.Entities.Models.Jobapplication", b =>
                {
                    b.HasOne("WebApp.Entities.Models.User", "CreatedbyNavigation")
                        .WithMany("JobapplicationCreatedbyNavigations")
                        .HasForeignKey("Createdby")
                        .HasConstraintName("fk_createdby");

                    b.HasOne("WebApp.Entities.Models.Job", "Job")
                        .WithMany("Jobapplications")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_job_id");

                    b.HasOne("WebApp.Entities.Models.User", "ModifiedbyNavigation")
                        .WithMany("JobapplicationModifiedbyNavigations")
                        .HasForeignKey("Modifiedby")
                        .HasConstraintName("fk_modifiedby");

                    b.HasOne("WebApp.Entities.Models.User", "User")
                        .WithMany("JobapplicationUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_user_id");

                    b.Navigation("CreatedbyNavigation");

                    b.Navigation("Job");

                    b.Navigation("ModifiedbyNavigation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebApp.Entities.Models.User", b =>
                {
                    b.HasOne("WebApp.Entities.Models.User", "CreatedbyNavigation")
                        .WithMany("InverseCreatedbyNavigation")
                        .HasForeignKey("Createdby")
                        .HasConstraintName("fk_createdby");

                    b.HasOne("WebApp.Entities.Models.User", "ModifiedbyNavigation")
                        .WithMany("InverseModifiedbyNavigation")
                        .HasForeignKey("Modifiedby")
                        .HasConstraintName("fk_modifiedby");

                    b.HasOne("WebApp.Entities.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_role_id");

                    b.Navigation("CreatedbyNavigation");

                    b.Navigation("ModifiedbyNavigation");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("WebApp.Entities.Models.Job", b =>
                {
                    b.Navigation("Jobapplications");
                });

            modelBuilder.Entity("WebApp.Entities.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("WebApp.Entities.Models.User", b =>
                {
                    b.Navigation("InverseCreatedbyNavigation");

                    b.Navigation("InverseModifiedbyNavigation");

                    b.Navigation("JobCreatedbyNavigations");

                    b.Navigation("JobModifiedbyNavigations");

                    b.Navigation("JobapplicationCreatedbyNavigations");

                    b.Navigation("JobapplicationModifiedbyNavigations");

                    b.Navigation("JobapplicationUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
